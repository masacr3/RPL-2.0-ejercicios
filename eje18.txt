void swap(int* arr, size_t a, size_t b);

void alter(int* arr, size_t i, size_t f);


void alternar(int* arreglo, size_t n) {
    return alter(arreglo,0,2*n-1);
}

void alter(int* arr, size_t i, size_t f){
    size_t medio = (i+f)/2;

    if (f-i == 3){
        swap(arr, medio, medio+1);
    } 

    size_t k = 0;
    size_t tope = medio / 2;

    while ( k < tope+1){
        swap(arr, medio-tope+k, medio+1+k);
        k++;
    }

    alter(arr, i, medio);
    alter(arr, medio+1, f);
}

void swap(int* arr, size_t a, size_t b){
    int aux = arr[a];
    arr[a] = arr[b];
    arr[b] = aux;
}

gcc -std=c99 -Wall -Wconversion -Wtype-limits -pedantic -Werror prueba.c eje18.c -o pruebas
./pruebas
cantidad elementos 2
(original)[ 1 2 ]
(salida)  [ 1 2 ]

cantidad elementos 4
(original)[ 1 2 -1 -2 ]
(salida)  [ 1 -1 2 -2 ]

cantidad elementos 8
(original)[ 1 2 3 4 -1 -2 -3 -4 ]
(salida)  [ 1 -1 2 -2 3 -3 4 -4 ]

cantidad elementos 16
(original)[ 1 2 3 4 5 6 7 8 -1 -2 -3 -4 -5 -6 -7 -8 ]
(salida)  [ 1 -1 2 -2 3 -3 4 -4 5 -5 6 -6 7 -7 8 -8 ]

cantidad elementos 32
(original)[ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16 ]
(salida)  [ 1 -1 2 -2 3 -3 4 -4 5 -5 6 -6 7 -7 8 -8 9 -9 10 -10 11 -11 12 -12 13 -13 14 -14 15 -15 16 -16 ]

cantidad elementos 64
(original)[ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19 -20 -21 -22 -23 -24 -25 -26 -27 -28 -29 -30 -31 -32 ]
(salida)  [ 1 -1 2 -2 3 -3 4 -4 5 -5 6 -6 7 -7 8 -8 9 -9 10 -10 11 -11 12 -12 13 -13 14 -14 15 -15 16 -16 17 -17 18 -18 19 -19 20 -20 21 -21 22 -22 23 -23 24 -24 25 -25 26 -26 27 -27 28 -28 29 -29 30 -30 31 -31 32 -32 ]
